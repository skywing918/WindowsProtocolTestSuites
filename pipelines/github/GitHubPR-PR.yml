jobs:
  - job:
    pool:
      vmImage: windows-2019
    displayName: Build Test Suite
    workspace:
      clean: true
    timeoutInMinutes: 0
    steps:
      - checkout: self

      - task: PowerShell@2
        displayName: Run Build Script
        inputs:
          targetType: filePath
          filePath: "$(build.solutionFolder)/build.ps1"
          arguments: "-Configuration $(build.configuration) -OutDir $(Build.ArtifactStagingDirectory)/staging"

      - task: ArchiveFiles@2
        displayName: "Archive $(Build.ArtifactStagingDirectory)/staging"
        inputs:
          rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/staging"
          includeRootFolder: false
          archiveFile: "$(Build.ArtifactStagingDirectory)/$(build.archiveName).zip"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact"
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)/$(build.archiveName).zip"
        condition: succeededOrFailed()

      - task: PublishBuildArtifacts@1
        displayName: "Publish Command Scripts"
        inputs:
          PathtoPublish: CommonScripts
          ArtifactName: CommonScripts
        condition: succeededOrFailed()

  - job:
    pool:
      vmImage: windows-2019
    displayName: Check email and Header
    workspace:
      clean: true
    timeoutInMinutes: 0
    steps:
      - checkout: self       

      - script: "git clone -b $(extRepo.branchName) $(extRepo.url) $(extRepo.dir)"
        displayName: "Fetch Helper"

      - task: PowerShell@2
        displayName: 'Validate Git commit author emails'
        inputs:
          filePath: '$(extRepo.dir)/CommonScript/ValidateGitCommitAuthorEmails.ps1'
          workingDirectory: '$(extRepo.dir)'  
          arguments: '-TestSuiteDir $(Build.Repository.LocalPath) -TargetBranchRef $(system.pullRequest.targetBranch) -SourceBranchRef $(system.pullRequest.sourceBranch) -PullRequestId $(system.pullRequest.pullRequestId)'

      - task: PowerShell@2
        displayName: 'Check License Header'
        inputs:
          filePath: '$(extRepo.dir)/CommonScript/CheckLicenseHeader.ps1'
          workingDirectory: '$(extRepo.dir)'  
          arguments: '-TestSuitePath $(Build.Repository.LocalPath) -IsCheckAll "$(test.IsCheckAllFilesLicenseHeader)" -targetBranch "$(system.pullRequest.targetBranch)" -sourceBranch "$(system.pullRequest.sourceBranch)" '

  - job:
    pool:
      vmImage: windows-2019
    displayName: Build RDP SUT Control Agents
    workspace:
      clean: true
    timeoutInMinutes: 0
    condition: and(succeeded(), eq(variables['test.testSuiteName'], 'RDPClient'))
    steps:
      - checkout: self

      - task: DotNetCoreCLI@2
        displayName: "Restore CSharp RDPSUTControlAgent"
        inputs:
          command: restore
          projects: "TestSuites/RDP/RDPSUTControlAgent/CSharp/**/*.csproj"

      - task: PowerShell@2
        displayName: "Build CSharp RDPSUTControlAgent"
        inputs:
          targetType: filePath
          filePath: "TestSuites/RDP/RDPSUTControlAgent/CSharp/build.ps1"
          arguments: "-Configuration $(build.configuration)"

      - task: CopyFiles@2
        displayName: "Copy Files to: $(Build.ArtifactStagingDirectory)/CSharp"
        inputs:
          SourceFolder: "TestSuites/RDP/RDPSUTControlAgent/CSharp/RDPSUTControlAgent/bin/$(build.configuration)/$(build.targetFramework)/publish"
          TargetFolder: "$(Build.ArtifactStagingDirectory)/CSharp"

      - task: BatchScript@1
        displayName: "Build Java RDPSUTControlAgent"
        inputs:
          filename: TestSuites/RDP/RDPSUTControlAgent/Java/gradlew.bat
          arguments: build
          workingFolder: TestSuites/RDP/RDPSUTControlAgent/Java

      - task: CopyFiles@2
        displayName: "Copy Java Agent to: $(Build.ArtifactStagingDirectory)/Java"
        inputs:
          SourceFolder: TestSuites/RDP/RDPSUTControlAgent/Java/Build
          TargetFolder: "$(Build.ArtifactStagingDirectory)/Java"

      - task: CopyFiles@2
        displayName: "Copy Java Agent Config to: $(Build.ArtifactStagingDirectory)/Java"
        inputs:
          SourceFolder: TestSuites/RDP/RDPSUTControlAgent/Java
          Contents: freerdp.config
          TargetFolder: "$(Build.ArtifactStagingDirectory)/Java"

      - task: CopyFiles@2
        displayName: "Copy Python Agent to: $(Build.ArtifactStagingDirectory)/Python"
        inputs:
          SourceFolder: TestSuites/RDP/RDPSUTControlAgent/Python
          TargetFolder: "$(Build.ArtifactStagingDirectory)/Python"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: RDPSUTControlAgent"
        inputs:
          ArtifactName: RDPSUTControlAgent
        condition: succeededOrFailed()

  
